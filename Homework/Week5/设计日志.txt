
代码说明：
1.由于我不清楚vivado能否在一个project里分别运行不同的top module，所以为每一种描述都建立了一个project
2.一共有三种描述方式：数据流描述（data_flow1和data_flow2），行为级描述（behavior）和结构化描述（structure）
此外还有一个包含所有代码的文件（Code）
3.数据流描述有两种方法，第一种（data_flow1）是最朴素的对化简后函数的描述，第二种（data_flow2）则进行了一些取巧，将3-7编码器简化为3-3编码器
4.由于vivado的IDE过于落后，因此我的代码编写均在VS Code上完成，之后在vivado建立project后直接add file
5.由于在编写behavior.v和data_flow1.v时遇到了一些小问题，所以进行了仿真检查，仿真文件分别为为behavior_tb.v和data_flow1_tb.v

设计电路时的小细节记录：
1.在行为级描述中，由于输出a_to_g的值是在always语句里完成赋值，所以a_to_g应为reg型
在其他描述中，a_to_g的赋值都不在过程块里完成，所以应为wire型
2.与c语言、matlab不同，Verilog的数组从左往右的下标是递减而非递增的
3.在描述常量时，最好对位宽和数制都进行声明，否则编译器默认为十进制
如AN=4'b1110，如果没有4'b，编译器会将其视为十进制的1110
4.要注意运算符*和&、+和|的区别。*和+只在数电基础中表示与和或，在Verilog表示乘法运算和加法运算
在数据流描述中，如果大意地将与或运算都用*和+完成，会发生意想不到的bug
这是因为*和+都会进位，而&和|不会。例：wire a=1或1，使用+,结果a=0;使用|，结果a=1

设计过程中遇到的一些待解答的问题：
1.对输出为reg型的module进行仿真时，为何在仿真文件里依然要将输出定义为wire型才能通过编译？
如对behavior.v进行仿真，明明输出a_to_g是reg型变量，但在behavior_tb.v里却必须将a_to_g声明为wire型
而输入D1，D0，EN明明是wire型变量，在behavior_tb.v里却必须将其都声明为reg型
2.我们知道，reg[6:0] A_TO_G(4:0)是存储器，那wire[6:0] A_TO_G(4:0)呢？应该将其称为什么？
3.理论上三种描述方式应该是等价的，为何elaborate之后的电路图不尽相同？
4.结构化描述中一定只能包含门级、模块级、开关级语句吗？出现一些assign语句行不行？
5.阻塞赋值语句和非阻塞赋值语句有什么区别？在设计电路时如何进行选择？
6.连续赋值语句和过程连续赋值语句有什么区别？（看教材没有看懂，期待讲解）
7.各种module的命名有没有什么约定俗成的规范？如3-7编码器，应该如何命名？
8.将输出的bitstream烧录到芯片里，会不会对basys3造成不可逆的影响？
9.vivado的IDE似乎总会出现中文乱码的问题，应该如何修改设置？